{"version":3,"sources":["context/stocks-context.js","context/theme-context.js","context/Providers.js","components/StocksTable/StockLogo.js","utils/constants.js","components/Header/HeaderTabs.js","components/Header/HeaderDropdown.js","components/Header/index.js","components/Footer.js","components/Searchbar.js","utils/requests.js","components/StocksTable/TableHeaders.js","components/StocksTable/TableRows.js","components/StocksTable/index.js","utils/charts.js","components/StockDetails/AverageInfo.js","components/StockDetails/index.js","utils/hooks.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","symbol","stockData","reducer","state","action","type","payload","Error","StocksStateContext","createContext","StocksDispatchContext","StocksProvider","children","useReducer","dispatch","Provider","value","primary","secondary","chart","price","average","gain","lose","bg","text","darkTheme","ThemeStateContext","ThemeDispatchContext","ThemeProvider","Providers","StyledImage","styled","img","StockLogo","src","navTabs","title","href","navDropdownItems","label","onClick","window","alert","stocksList","tableColumns","Header","accessor","Cell","basicInfo","additionalInfo","TabsList","map","NavItem","NavLink","uniqueId","HeaderTabs","Nav","className","navbar","ItemsList","items","DropdownItem","HeaderDropdown","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","appName","process","REACT_APP_WEBSITE_NAME","useState","isOpen","setIsOpen","Navbar","color","light","expand","NavbarBrand","NavbarToggler","Collapse","StyledFooter","footer","Footer","StyledGroup","InputGroup","Searchbar","onChange","placeholder","input","setInput","InputGroupAddon","addonType","InputGroupText","Input","v","target","token","REACT_APP_API_TOKEN","api","axios","create","baseURL","params","getStatus","a","get","console","error","getQuotesForStock","res","message","getLogoForStock","getChartForStock","range","TableHeaders","headers","column","getHeaderProps","render","StyledRow","tr","TableRows","rows","prepareRow","row","getRowProps","original","cells","cell","getCellProps","StocksTable","stocks","data","useMemo","d","pick","columns","useTable","getTableProps","getTableBodyProps","useContext","contextSymbol","loadChart","Table","dark","responsivefy","svg","node","container","d3","parentNode","width","parseInt","style","height","aspect","resize","targetWidth","attr","Math","round","call","on","drawLinearChart","id","xAxis","yAxis","xConvert","x","yConvert","y","colors","margin","innerWidth","innerHeight","xMin","xMax","yMin","yMax","xScale","domain","yScale","line","movingAverageData","numberOfPricePoints","index","total","start","max","subset","slice","sum","reduce","b","close","date","Date","length","movingAverage","movingAverageLine","curve","volData","filter","volume","yMinVolume","min","yMaxVolume","yVolumeScale","setTimeout","select","remove","clearChart","append","selectAll","enter","i","drawSvg","StyledInfo","div","InfoContainer","AverageInfo","info","allowed","Alert","toFixed","Container","StyledChart","StockDetails","useLinearChart","avg","isEmpty","Array","from","acc","obj","Object","keys","key","set","concat","Map","name","values","assign","getAverageInfo","App","status","setStatus","setStocks","useEffect","s","fetchQuote","stock","logoData","logo","url","item","populateStocks","useStocks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02d4e053.chunk.js","sourcesContent":["import { createContext, useReducer } from 'react';\n\nconst initialState = {\n    symbol: '',\n    stockData: [{}]\n};\n\nconst reducer = (state, action) => {\n    const { type, payload } = action || {};\n    switch (type) {\n        case 'LOAD_STOCK':\n            const { symbol, stockData } = payload || {};\n            return { ...state, symbol, stockData };\n        case 'RESET_CONTEXT':\n            return initialState;\n        default:\n            throw new Error('Invalid action');\n    }\n};\n\nexport const StocksStateContext = createContext();\nexport const StocksDispatchContext = createContext();\n\nconst StocksProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    return (\n        <StocksStateContext.Provider value={state}>\n            <StocksDispatchContext.Provider value={dispatch}>\n                {children}\n            </StocksDispatchContext.Provider>\n        </StocksStateContext.Provider>\n    );\n};\n\nexport default StocksProvider;\n","import { createContext, useReducer } from 'react';\n\nconst initialState = {\n    primary: '#19b3ff',\n    secondary: '#148fcc',\n    chart: {\n        price: 'steelblue',\n        average: 'orange',\n        gain: '#03a678',\n        lose: '#c0392b',\n    },\n    bg: '#ffffff',\n    text: '#171818',\n};\n\nconst darkTheme = {\n    ...initialState,\n    bg: '#222222',\n    text: '#eff1f2',\n};\n\nconst reducer = (state, action) => {\n    const { type } = action || {};\n    switch(type) {\n        case 'DARK_MODE':\n            return darkTheme;\n        case 'RESET_CONTEXT':\n            return initialState;\n        default:\n            throw new Error('Invalid action');\n    }\n}\n\nexport const ThemeStateContext = createContext();\nexport const ThemeDispatchContext = createContext();\n\nconst ThemeProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    return (\n        <ThemeStateContext.Provider value={state}>\n            <ThemeDispatchContext.Provider value={dispatch}>\n                {children}\n            </ThemeDispatchContext.Provider>\n        </ThemeStateContext.Provider>\n    )\n};\n\nexport default ThemeProvider;\n","import React from 'react';\nimport StocksProvider from './stocks-context';\nimport ThemeProvider from './theme-context';\n\nconst Providers = ({ children }) => (\n    <ThemeProvider>\n        <StocksProvider>\n            {children}\n        </StocksProvider>\n    </ThemeProvider>\n);\n\nexport default Providers;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledImage = styled.img`\n    height: 50px;\n    width: auto;\n`;\n\nconst StockLogo = ({ src }) => (\n    <StyledImage src={src} />\n);\n\nexport default StockLogo;\n","import StockLogo from '../components/StocksTable/StockLogo';\n\n// To be replaced by i18n\nexport const failedStatusLabel = 'Failed to fetch stocks list - try next month?';\nexport const stocksListLabel = 'Stocks List';\nexport const aboutLabel = 'About';\nexport const aboutMessageLabel = 'Nike coding challenge';\nexport const footerLabel = 'Stonks - © 2021';\nexport const searchbarLabel = 'Symbol';\nexport const searchbarPlaceholder = 'NKE';\nexport const averageInfoLabel = '-- Additional Information --';\nexport const navMenuLabel = 'Menu';\n\nexport const navTabs = [\n    { title: stocksListLabel, href: '/stocks' },\n];\n// TODO\n// - implement modal\n//      - theme editor (color picker)\n//      - language selector (i18n dropdown)\nexport const navDropdownItems = [\n    { label: aboutLabel, onClick: () => window.alert(aboutMessageLabel) },\n];\nexport const baseURL = 'https://cloud.iexapis.com/stable';\nexport const stocksList = [\n    'NKE',\n    'NIO',\n    'MRK',\n    'WFC',\n    'SQ',\n    'DIS',\n    'AAPL',\n    'TSLA',\n    'MSFT',\n    'AMZN',\n];\nexport const tableColumns = [\n    {\n        Header: '',\n        accessor: 'logo',\n        Cell: ({ value }) => <StockLogo src={value} />,\n    },\n    {\n        Header: 'Symbol',\n        accessor: 'symbol',\n    },\n    {\n        Header: 'Open',\n        accessor: 'iexOpen',\n    },\n    {\n        Header: 'Close',\n        accessor: 'iexClose',\n    },\n    {\n        Header: 'Price',\n        accessor: 'latestPrice',\n    },\n];\nexport const basicInfo = [\n    'logo',\n    'symbol',\n    'iexOpen',\n    'iexClose',\n    'latestPrice',\n];\nexport const additionalInfo = [\n    'high',\n    'low',\n    'close',\n    'volume',\n    'change',\n    'peRatio',\n    'week52High',\n    'week52Low',\n];\nexport const chartId = '#chart';\nexport const xAxisChart = 'date';\nexport const yAxisChart = 'close';\n","import React from 'react';\nimport { Nav, NavItem, NavLink } from 'reactstrap';\nimport uniqueId from 'lodash.uniqueid';\nimport { navTabs } from '../../utils/constants';\n\nconst TabsList = () => navTabs.map(({ title, href }) => (\n    <NavItem key={uniqueId('nav-tab_')}>\n        <NavLink href={href}>{title}</NavLink>\n    </NavItem>\n));\n\nconst HeaderTabs = () => (\n    <Nav className=\"mr-auto\" navbar>\n        <TabsList />\n    </Nav>\n);\n\nexport default HeaderTabs;\n","import React from 'react';\nimport {\n    Nav,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n} from 'reactstrap';\nimport uniqueId from 'lodash.uniqueid';\nimport { navDropdownItems, navMenuLabel } from '../../utils/constants';\n\nconst ItemsList = ({ items }) => items.map(({ label, onClick }) => (\n    <DropdownItem\n        key={uniqueId('nav-dropdown-item_')}\n        onClick={onClick}\n    >\n        {label}\n    </DropdownItem>\n));\n\nconst HeaderDropdown = ({ items = navDropdownItems, label = navMenuLabel }) => (\n    <Nav navbar>\n        <UncontrolledDropdown nav inNavbar>\n            <DropdownToggle nav caret>\n                {label}\n            </DropdownToggle>\n            <DropdownMenu right>\n                <ItemsList items={items}/>\n            </DropdownMenu>\n        </UncontrolledDropdown>\n    </Nav>\n);\n\nexport default HeaderDropdown;\n","import React, { useState } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n} from 'reactstrap';\nimport HeaderTabs from './HeaderTabs';\nimport HeaderDropdown from './HeaderDropdown';\n\nconst { REACT_APP_WEBSITE_NAME: appName } = process.env || {};\n\nconst Header = () => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggle = () => setIsOpen(!isOpen);\n    return (\n        <header>\n            <Navbar color=\"light\" light expand=\"md\">\n                <NavbarBrand href=\"/\">{appName}</NavbarBrand>\n                <NavbarToggler onClick={toggle} />\n                <Collapse isOpen={isOpen} navbar>\n                    <HeaderTabs />\n                    <HeaderDropdown />\n                </Collapse>\n            </Navbar>\n        </header>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { footerLabel } from '../utils/constants';\n\nconst StyledFooter = styled.footer`\n    left: 0;\n    bottom: 0;\n    width: 100%;\n    z-index: 9999;\n    text-align: center;\n    padding: 1em;\n    background-color: #f8f9fa;\n`;\n\nconst Footer = ({ label = footerLabel }) => (\n    <StyledFooter>\n        {label}\n    </StyledFooter>\n);\n\nexport default Footer;\n","import React, { useState } from 'react';\nimport {\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    Input\n} from 'reactstrap';\nimport styled from 'styled-components';\nimport { searchbarPlaceholder, searchbarLabel } from '../utils/constants';\n\nconst StyledGroup = styled(InputGroup)`\n    width: 80%;\n    margin: 0 auto;\n    padding: 1em;\n`;\n\nconst Searchbar = ({\n    onChange,\n    value,\n    placeholder = searchbarPlaceholder,\n    label = searchbarLabel\n}) => {\n    const [input, setInput] = useState('');\n\n    const handleSearch = ({ target: { value: v }}) => {\n        setInput(v);\n    };\n\n    return (\n        <StyledGroup>\n            <InputGroupAddon addonType=\"prepend\">\n                <InputGroupText>{label}</InputGroupText>\n            </InputGroupAddon>\n            <Input\n                placeholder={placeholder}\n                onChange={onChange || handleSearch}\n                value={value || input}\n            />\n        </StyledGroup>\n    );\n};\n\nexport default Searchbar;\n","import axios from \"axios\";\nimport { baseURL } from './constants';\n\nconst { REACT_APP_API_TOKEN: token } = process.env || {};\n\nconst api = axios.create({\n    baseURL,\n    params: { token }\n});\n\nexport const getStatus = async () => {\n    try {\n        await api.get(`/status`);\n        return true;\n    } catch (error) {\n        console.error(error);\n        return false;\n    }\n};\n\nexport const getQuotesForStock = async ({ symbol = '' }) => {\n    try {\n        const res = await api.get(`/stock/${symbol}/quote`);\n        return res;\n    } catch (error) {\n        const message = error || {};\n        throw new Error(message);\n    }\n};\n\nexport const getLogoForStock = async ({ symbol = '' }) => {\n    try {\n        const res = await api.get(`/stock/${symbol}/logo`);\n        return res;\n    } catch (error) {\n        const message = error || {};\n        throw new Error(message);\n    }\n};\n\nexport const getChartForStock = async ({ symbol = '', range = '' }) => {\n    try {\n        const res = await api.get(`/stock/${symbol}/chart/${range}`);\n        return res;\n    } catch (error) {\n        const message = error || {};\n        throw new Error(message);\n    }\n};","import React from 'react';\n\nconst TableHeaders = ({ headers }) => headers.map(column => (\n    <th {...column.getHeaderProps()}>\n        {column.render('Header')}\n    </th>\n));\n\nexport default TableHeaders;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledRow = styled.tr`\n    cursor: pointer;\n`;\n\nconst TableRows = ({ rows, prepareRow, onClick }) => rows.map((row) => {\n    const handleOnClick = () => onClick(row.original);\n    \n    prepareRow(row);\n    return (\n        <StyledRow {...row.getRowProps()} onClick={handleOnClick}>\n            {row.cells.map(cell => (\n                <td {...cell.getCellProps()}>\n                    {cell.render(\"Cell\")}\n                </td>\n            ))}\n        </StyledRow>\n    );\n});\n\nexport default TableRows;\n","import React, { useMemo, useContext } from 'react';\nimport { useTable } from 'react-table';\nimport { Table } from 'reactstrap';\nimport pick from 'lodash.pick';\nimport { tableColumns, basicInfo } from '../../utils/constants';\nimport { StocksDispatchContext, StocksStateContext } from '../../context/stocks-context';\nimport { getChartForStock } from '../../utils/requests';\nimport TableHeaders from './TableHeaders';\nimport TableRows from './TableRows';\n\nconst StocksTable = ({ stocks }) => {\n    const data = useMemo(() => stocks.map((d) => pick(d, basicInfo)), [stocks]);\n    const columns = useMemo(() => tableColumns, []);\n    const {\n        getTableProps,\n        getTableBodyProps,\n        rows,\n        headers,\n        prepareRow,\n    } = useTable({\n        columns,\n        data\n    });\n    const dispatch = useContext(StocksDispatchContext);\n    const { symbol: contextSymbol } = useContext(StocksStateContext);\n\n    const loadChart = async (symbol) => {\n        // TODO: user can change range\n        const range = '';\n        const res = await getChartForStock({ symbol, range });\n        const { data: stockData } = res || {};\n        dispatch({ type: 'LOAD_STOCK', payload: { symbol, stockData } });\n    }\n\n    const handleOnClick = (row) => {\n        const { symbol } = row || {};\n        if (contextSymbol === symbol) {\n            dispatch({ type: 'RESET_CONTEXT' });\n        } else {\n            loadChart(symbol);\n        }\n    };\n\n    return (\n        <Table dark {...getTableProps()}>\n            <thead>\n                <tr>\n                    <TableHeaders headers={headers} />\n                </tr>\n            </thead>\n            <tbody {...getTableBodyProps()}>\n                <TableRows\n                    rows={rows}\n                    prepareRow={prepareRow}\n                    onClick={handleOnClick}\n                />\n            </tbody>\n        </Table>\n    );\n};\n\nexport default StocksTable;\n","import * as d3 from 'd3';\nimport isEmpty from 'lodash.isempty';\n\n// source: https://brendansudol.com/writing/responsive-d3\nconst responsivefy = (svg) => {\n    if (!svg.node()) {\n        return;\n    }\n    // get container + svg aspect ratio\n    const container = d3.select(svg.node().parentNode);\n    const width = parseInt(svg.style('width'));\n    const height = parseInt(svg.style('height'));\n    const aspect = width / height;\n\n    // get width of container and resize svg to fit it\n    const resize = () => {\n        const targetWidth = parseInt(container.style('width'));\n        svg.attr('width', targetWidth);\n        svg.attr('height', Math.round(targetWidth / aspect));\n    }\n\n    // add viewBox and preserveAspectRatio properties,\n    // and call resize so that svg resizes on inital page load\n    svg.attr('viewBox', `0 0 ${width} ${height}`)\n        .attr('perserveAspectRatio', 'xMinYMid')\n        .call(resize);\n\n    // to register multiple listeners for same event type, \n    // you need to add namespace, i.e., 'click.foo'\n    // necessary if you call invoke this function for multiple svgs\n    // api docs: https://github.com/mbostock/d3/wiki/Selections#on\n    d3.select(window).on(`resize.${container.attr('id')}`, resize);\n};\n\nconst movingAverage = (data, numberOfPricePoints) =>\n    data.map((row, index, total) => {\n        const start = Math.max(0, index - numberOfPricePoints);\n        const subset = total.slice(start, index + 1);\n        const sum = subset.reduce((a, b) => a + b.close, 0);\n        return ({\n            date: new Date(row.date),\n            average: sum / subset.length\n        });\n    });\n\nconst clearChart = (id) => {\n    d3.select(id).select('svg').remove();\n};\n\nexport const drawLinearChart = ({\n    id = '',\n    data = [{}],\n    xAxis = '',\n    yAxis = '',\n    xConvert = (x) => x,\n    yConvert = (y) => y,\n    colors = {\n        price: '#4682b4',\n        average: '#ffa500',\n        gain: '#03a678',\n        lose: '#c0392b',\n    }\n}) => {\n    const margin = { top: 50, right: 50, bottom: 50, left: 50 };\n    const width = window.innerWidth - margin.left - margin.right;\n    const height = window.innerHeight - margin.top - margin.bottom;\n\n    const xMin = d3.min(data, d => xConvert(d[xAxis]));\n    const xMax = d3.max(data, d => xConvert(d[xAxis]));\n    const yMin = d3.min(data, d => yConvert(d[yAxis]));\n    const yMax = d3.max(data, d => yConvert(d[yAxis]));\n\n    const xScale = d3\n        .scaleTime()\n        .domain([xMin, xMax])\n        .range([0, width]);\n    \n    const yScale = d3\n        .scaleLinear()\n        .domain([yMin - 5, yMax])\n        .range([height, 0]);\n    \n    const line = d3\n        .line()\n        .x(d => xScale(xConvert(d[xAxis])))\n        .y(d => yScale(yConvert(d[yAxis])));\n    \n    const movingAverageData = movingAverage(data, 49);\n\n    const movingAverageLine = d3\n        .line()\n        .x(d => xScale(xConvert(d[xAxis])))\n        .y(d => yScale(yConvert(d.average)))\n        .curve(d3.curveBasis);\n    \n    const volData = data.filter(d => d.volume);\n    const yMinVolume = d3.min(volData, d => Math.min(d.volume));\n    const yMaxVolume = d3.max(volData, d => Math.max(d.volume));\n    const yVolumeScale = d3\n        .scaleLinear()\n        .domain([yMinVolume, yMaxVolume])\n        .range([height, 0]);\n\n    const drawSvg = () => {\n        // setup\n        const svg = d3\n            .select(id)\n            .append('svg')\n            .attr('width', width + margin.left + margin.right)\n            .attr('height', height + margin.top + margin.bottom)\n            .call(responsivefy)\n            .append('g')\n            .attr('transform', `translate(${margin.left},  ${margin.top})`);\n        // x axis\n        svg\n            .append('g')\n            .attr('id', 'xAxis')\n            .attr('transform', `translate(0, ${height})`)\n            .call(d3.axisBottom(xScale));\n        // y axis\n        svg\n            .append('g')\n            .attr('id', 'yAxis')\n            .attr('transform', `translate(${width}, 0)`)\n            .call(d3.axisRight(yScale));\n        // draw price line\n        svg\n            .append('path')\n            .data([data])\n            .style('fill', 'none')\n            .attr('id', 'priceChart')\n            .attr('stroke', colors.price)\n            .attr('stroke-width', '1.5')\n            .attr('d', line);\n        // draw avg curve\n        svg\n            .append('path')\n            .data([movingAverageData])\n            .style('fill', 'none')\n            .attr('id', 'movingAverageLine')\n            .attr('stroke', colors.average)\n            .attr('d', movingAverageLine);\n        // draw volume bar\n        svg\n            .selectAll()\n            .data(volData)\n            .enter()\n            .append('rect')\n            .attr('x', d => xScale(xConvert(d[xAxis])))\n            .attr('y', d => yVolumeScale(d.volume))\n            .attr('fill', (d, i) =>\n                (i && volData[i - 1].close > d.close ? colors.lose : colors.gain))\n            .attr('width', 1)\n            .attr('height', d => (height - yVolumeScale(d.volume)));\n    }\n\n    const timeout = 420;\n    setTimeout(() => {\n        clearChart(id);\n        drawSvg();\n    }, timeout);\n};\n\nexport const getAverageInfo = (stockData) => {\n    if (isEmpty(stockData)) {\n        return [{}];\n    }\n    return (\n        Array.from(stockData.reduce(\n            (acc, obj) => Object.keys(obj).reduce( \n                (acc, key) => typeof obj[key] == \"number\"\n                    ? acc.set(key, (acc.get(key) || []).concat(obj[key]))\n                    : acc,\n            acc),\n            new Map()\n        )).reduce(\n            (acc, [name, values]) =>\n                Object.assign(acc, { [name]: values.reduce((a,b) => a + b) / values.length }),\n            {}\n    ));\n};\n","import React from 'react';\nimport { Alert } from 'reactstrap';\nimport uniqueId from 'lodash.uniqueid';\nimport styled from 'styled-components';\nimport { additionalInfo, averageInfoLabel } from '../../utils/constants';\n\nconst StyledInfo = styled.div`\n    line-height: 2;\n    margin-left: 2em;\n    font-weight: 500;\n`;\n\nconst InfoContainer = styled.div`\n    background: #f9f9f9;\n    color: #121212;\n    width: 100%;\n`;\n\nconst AverageInfo = ({\n    info = [],\n    allowed = additionalInfo\n}) => (\n    <InfoContainer>\n        <Alert color=\"info\">{averageInfoLabel}</Alert>\n        { allowed.map((a) => info[a] && (\n            <StyledInfo key={uniqueId('average-info_')}>\n                {`⇰ ${a} = ${info[a].toFixed(2)}`}\n            </StyledInfo>\n        ))}\n        <hr />\n    </InfoContainer>\n);\n\nexport default AverageInfo;\n","import React, { useContext } from 'react';\nimport isEmpty from 'lodash.isempty';\nimport styled from 'styled-components';\nimport { StocksStateContext } from '../../context/stocks-context';\nimport { getAverageInfo } from '../../utils/charts';\nimport { useLinearChart } from '../../utils/hooks';\nimport AverageInfo from './AverageInfo';\n\nconst Container = styled.div`\n    padding: 1em;\n`;\n\n// get from theme context\nconst StyledChart = styled.div`\n    background: #121212;\n    color: #f9f9f9;\n`;\n\nconst StockDetails = () => {\n    const { symbol, stockData } = useContext(StocksStateContext);\n    useLinearChart({ data: stockData });\n\n    const avg = getAverageInfo(stockData);\n    if (!symbol || isEmpty(stockData)) {\n        return null;\n    }\n    return (\n        <Container>\n            <StyledChart id=\"chart\" />\n            <AverageInfo info={avg} />\n        </Container>\n    );\n};\n\nexport default StockDetails;\n","import { useState, useEffect, useMemo } from 'react';\nimport { getQuotesForStock, getLogoForStock, getStatus } from './requests';\nimport { stocksList } from './constants';\nimport { chartId, xAxisChart, yAxisChart } from './constants';\nimport { drawLinearChart } from './charts';\n\n// Returns stocks data, and status of server\nexport const useStocks = () => {\n    const [status, setStatus] = useState(false);\n    const [stocks, setStocks] = useState([]);\n\n    useEffect(() => {\n        const s = getStatus();\n        setStatus(s);\n    }, [setStatus]);\n\n    useEffect(() => {\n        const fetchQuote = async ({ symbol }) => {\n            const { data: stock } = await getQuotesForStock({ symbol }) || {};\n            const { data: logoData } = await getLogoForStock({ symbol }) || {};\n            const { url: logo } = logoData || {};\n            const item = { ...stock, logo };\n            setStocks((s) => [...s, item])\n        };\n        const populateStocks = async () => {\n            for (let i = 0; i < stocksList.length; i += 1) {\n                fetchQuote({ symbol: stocksList[i] });\n            }\n        }\n        if (status) {\n            populateStocks();\n        }\n    }, [status]);\n\n    return [stocks, status];\n};\n\nexport const useLinearChart = ({\n    data,\n    xAxis = xAxisChart,\n    yAxis = yAxisChart,\n    id = chartId,\n}) => {\n    useMemo(() => {\n        const svg = drawLinearChart({\n            id,\n            data,\n            xAxis,\n            yAxis,\n            xConvert: (x) => new Date(x),\n        });\n        return svg;\n    }, [data, id, xAxis, yAxis]);\n};\n","import React from 'react';\nimport { Alert } from 'reactstrap';\nimport Providers from './context/Providers';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Searchbar from './components/Searchbar';\nimport StocksTable from './components/StocksTable';\nimport StockDetails from './components/StockDetails';\nimport { useStocks } from './utils/hooks';\nimport { failedStatusLabel } from './utils/constants';\n\nconst App = () => {\n    const [stocks, status] = useStocks();\n    return (\n        <Providers>\n            <Header />\n            <Searchbar />\n            {!status && <Alert color=\"warning\">{failedStatusLabel}</Alert>}\n            <StockDetails />\n            <StocksTable stocks={stocks} />\n            <Footer />\n        </Providers>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}