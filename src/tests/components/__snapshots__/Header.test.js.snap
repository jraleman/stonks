// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header should render 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <header>
        <nav
          class="navbar navbar-expand-md navbar-light bg-light"
        >
          <a
            class="navbar-brand"
            href="/"
          >
            Stonks
          </a>
          <button
            aria-label="Toggle navigation"
            class="navbar-toggler"
            type="button"
          >
            <span
              class="navbar-toggler-icon"
            />
          </button>
          <div
            class="collapse navbar-collapse"
          >
            <ul
              class="mr-auto navbar-nav"
            >
              <li
                class="nav-item"
              >
                <a
                  class="nav-link"
                  href="/stocks"
                >
                  Stocks List
                </a>
              </li>
            </ul>
            <ul
              class="navbar-nav"
            >
              <li
                class="dropdown nav-item"
              >
                <a
                  aria-expanded="false"
                  aria-haspopup="true"
                  class="dropdown-toggle nav-link"
                  href="#"
                >
                  Menu
                </a>
                <div
                  aria-hidden="true"
                  class="dropdown-menu dropdown-menu-right"
                  role="menu"
                  tabindex="-1"
                >
                  <button
                    class="dropdown-item"
                    role="menuitem"
                    tabindex="0"
                    type="button"
                  >
                    About
                  </button>
                </div>
              </li>
            </ul>
          </div>
        </nav>
      </header>
    </div>
  </body>,
  "container": <div>
    <header>
      <nav
        class="navbar navbar-expand-md navbar-light bg-light"
      >
        <a
          class="navbar-brand"
          href="/"
        >
          Stonks
        </a>
        <button
          aria-label="Toggle navigation"
          class="navbar-toggler"
          type="button"
        >
          <span
            class="navbar-toggler-icon"
          />
        </button>
        <div
          class="collapse navbar-collapse"
        >
          <ul
            class="mr-auto navbar-nav"
          >
            <li
              class="nav-item"
            >
              <a
                class="nav-link"
                href="/stocks"
              >
                Stocks List
              </a>
            </li>
          </ul>
          <ul
            class="navbar-nav"
          >
            <li
              class="dropdown nav-item"
            >
              <a
                aria-expanded="false"
                aria-haspopup="true"
                class="dropdown-toggle nav-link"
                href="#"
              >
                Menu
              </a>
              <div
                aria-hidden="true"
                class="dropdown-menu dropdown-menu-right"
                role="menu"
                tabindex="-1"
              >
                <button
                  class="dropdown-item"
                  role="menuitem"
                  tabindex="0"
                  type="button"
                >
                  About
                </button>
              </div>
            </li>
          </ul>
        </div>
      </nav>
    </header>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`HeaderDropdown sets dropdown items 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <ul
        class="navbar-nav"
      >
        <li
          class="dropdown nav-item"
        >
          <a
            aria-expanded="false"
            aria-haspopup="true"
            class="dropdown-toggle nav-link"
            href="#"
          >
            Menu
          </a>
          <div
            aria-hidden="true"
            class="dropdown-menu dropdown-menu-right"
            role="menu"
            tabindex="-1"
          >
            <button
              class="dropdown-item"
              role="menuitem"
              tabindex="0"
              type="button"
            >
              About
            </button>
          </div>
        </li>
      </ul>
    </div>
  </body>,
  "container": <div>
    <ul
      class="navbar-nav"
    >
      <li
        class="dropdown nav-item"
      >
        <a
          aria-expanded="false"
          aria-haspopup="true"
          class="dropdown-toggle nav-link"
          href="#"
        >
          Menu
        </a>
        <div
          aria-hidden="true"
          class="dropdown-menu dropdown-menu-right"
          role="menu"
          tabindex="-1"
        >
          <button
            class="dropdown-item"
            role="menuitem"
            tabindex="0"
            type="button"
          >
            About
          </button>
        </div>
      </li>
    </ul>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`HeaderDropdown should render 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <ul
        class="navbar-nav"
      >
        <li
          class="dropdown nav-item"
        >
          <a
            aria-expanded="false"
            aria-haspopup="true"
            class="dropdown-toggle nav-link"
            href="#"
          >
            Menu
          </a>
          <div
            aria-hidden="true"
            class="dropdown-menu dropdown-menu-right"
            role="menu"
            tabindex="-1"
          />
        </li>
      </ul>
    </div>
  </body>,
  "container": <div>
    <ul
      class="navbar-nav"
    >
      <li
        class="dropdown nav-item"
      >
        <a
          aria-expanded="false"
          aria-haspopup="true"
          class="dropdown-toggle nav-link"
          href="#"
        >
          Menu
        </a>
        <div
          aria-hidden="true"
          class="dropdown-menu dropdown-menu-right"
          role="menu"
          tabindex="-1"
        />
      </li>
    </ul>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`HeaderTabs sets header tabs 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <ul
        class="mr-auto navbar-nav"
      >
        <li
          class="nav-item"
        >
          <a
            class="nav-link"
            href="/stocks"
          >
            Stocks List
          </a>
        </li>
      </ul>
    </div>
  </body>,
  "container": <div>
    <ul
      class="mr-auto navbar-nav"
    >
      <li
        class="nav-item"
      >
        <a
          class="nav-link"
          href="/stocks"
        >
          Stocks List
        </a>
      </li>
    </ul>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`HeaderTabs should render 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <ul
        class="mr-auto navbar-nav"
      >
        <li
          class="nav-item"
        >
          <a
            class="nav-link"
            href="/stocks"
          >
            Stocks List
          </a>
        </li>
      </ul>
    </div>
  </body>,
  "container": <div>
    <ul
      class="mr-auto navbar-nav"
    >
      <li
        class="nav-item"
      >
        <a
          class="nav-link"
          href="/stocks"
        >
          Stocks List
        </a>
      </li>
    </ul>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
